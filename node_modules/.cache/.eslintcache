[{"/home/delpinor/git/psa_tribu1/my-app/src/index.js":"1","/home/delpinor/git/psa_tribu1/my-app/src/App.js":"2","/home/delpinor/git/psa_tribu1/my-app/src/reportWebVitals.js":"3","/home/delpinor/git/psa_tribu1/my-app/src/Home.js":"4","/home/delpinor/git/psa_tribu1/my-app/src/recursos/Resources.js":"5","/home/delpinor/git/psa_tribu1/my-app/src/recursos/FormEditHoras.js":"6","/home/delpinor/git/psa_tribu1/my-app/src/recursos/CargaDeHoras.js":"7","/home/delpinor/git/psa_tribu1/my-app/src/recursos/FormCargaHoras.js":"8","/home/delpinor/git/psa_tribu1/my-app/src/soporte/SupportTicketGrid.js":"9","/home/delpinor/git/psa_tribu1/my-app/src/soporte/Support.js":"10","/home/delpinor/git/psa_tribu1/my-app/src/soporte/TicketDetails.js":"11","/home/delpinor/git/psa_tribu1/my-app/src/soporte/TicketCreation.js":"12","/home/delpinor/git/psa_tribu1/my-app/src/proyectos/services/routers.js":"13","/home/delpinor/git/psa_tribu1/my-app/src/shared/card.js":"14","/home/delpinor/git/psa_tribu1/my-app/src/shared/navbar.js":"15","/home/delpinor/git/psa_tribu1/my-app/src/soporte/ProductList.js":"16","/home/delpinor/git/psa_tribu1/my-app/src/soporte/components/ProductCard.js":"17","/home/delpinor/git/psa_tribu1/my-app/src/soporte/components/AlertModal.js":"18","/home/delpinor/git/psa_tribu1/my-app/src/soporte/components/TicketGrid.js":"19","/home/delpinor/git/psa_tribu1/my-app/src/soporte/components/AddTaskModal.js":"20","/home/delpinor/git/psa_tribu1/my-app/src/proyectos/components/ProjectEditContainer.js":"21","/home/delpinor/git/psa_tribu1/my-app/src/proyectos/components/ProjectCreateContainer.js":"22","/home/delpinor/git/psa_tribu1/my-app/src/proyectos/components/TaskCreateContainer.js":"23","/home/delpinor/git/psa_tribu1/my-app/src/proyectos/components/TaskSummaryContainer.js":"24","/home/delpinor/git/psa_tribu1/my-app/src/proyectos/components/TaskEditContainer.js":"25","/home/delpinor/git/psa_tribu1/my-app/src/proyectos/components/ProjectsContainer.js":"26","/home/delpinor/git/psa_tribu1/my-app/src/proyectos/components/ProjectDetailsContainer.js":"27","/home/delpinor/git/psa_tribu1/my-app/src/proyectos/services/helpers.js":"28","/home/delpinor/git/psa_tribu1/my-app/src/proyectos/components/SpinnerCenter.js":"29","/home/delpinor/git/psa_tribu1/my-app/src/proyectos/components/ResultMessage.js":"30","/home/delpinor/git/psa_tribu1/my-app/src/proyectos/components/TaskEdit.js":"31","/home/delpinor/git/psa_tribu1/my-app/src/proyectos/components/ProjectEdit.js":"32","/home/delpinor/git/psa_tribu1/my-app/src/proyectos/services/projects.js":"33","/home/delpinor/git/psa_tribu1/my-app/src/proyectos/components/TaskSummary.js":"34","/home/delpinor/git/psa_tribu1/my-app/src/proyectos/components/Projects.js":"35","/home/delpinor/git/psa_tribu1/my-app/src/proyectos/components/ProjectDetails.js":"36","/home/delpinor/git/psa_tribu1/my-app/src/proyectos/services/tasks.js":"37","/home/delpinor/git/psa_tribu1/my-app/src/proyectos/components/Employee.js":"38","/home/delpinor/git/psa_tribu1/my-app/src/proyectos/components/SearchForm.js":"39","/home/delpinor/git/psa_tribu1/my-app/src/proyectos/components/TaskList.js":"40","/home/delpinor/git/psa_tribu1/my-app/src/proyectos/components/ModalOK.js":"41","/home/delpinor/git/psa_tribu1/my-app/src/proyectos/services/employees.js":"42"},{"size":500,"mtime":1627174676845,"results":"43","hashOfConfig":"44"},{"size":1945,"mtime":1627228232860,"results":"45","hashOfConfig":"44"},{"size":362,"mtime":1627174676845,"results":"46","hashOfConfig":"44"},{"size":987,"mtime":1627239048249,"results":"47","hashOfConfig":"44"},{"size":4048,"mtime":1627227960659,"results":"48","hashOfConfig":"44"},{"size":9817,"mtime":1627227960659,"results":"49","hashOfConfig":"44"},{"size":9852,"mtime":1627227960659,"results":"50","hashOfConfig":"44"},{"size":9803,"mtime":1627227960659,"results":"51","hashOfConfig":"44"},{"size":4173,"mtime":1627178298852,"results":"52","hashOfConfig":"44"},{"size":2854,"mtime":1627178298852,"results":"53","hashOfConfig":"44"},{"size":16015,"mtime":1627178298852,"results":"54","hashOfConfig":"44"},{"size":11197,"mtime":1627178298852,"results":"55","hashOfConfig":"44"},{"size":1699,"mtime":1627178489253,"results":"56","hashOfConfig":"44"},{"size":611,"mtime":1627174676845,"results":"57","hashOfConfig":"44"},{"size":2027,"mtime":1627227960659,"results":"58","hashOfConfig":"44"},{"size":1833,"mtime":1627178298852,"results":"59","hashOfConfig":"44"},{"size":639,"mtime":1627178298852,"results":"60","hashOfConfig":"44"},{"size":1213,"mtime":1627178298852,"results":"61","hashOfConfig":"44"},{"size":1256,"mtime":1627178298852,"results":"62","hashOfConfig":"44"},{"size":5891,"mtime":1627178298852,"results":"63","hashOfConfig":"44"},{"size":1011,"mtime":1627170756762,"results":"64","hashOfConfig":"44"},{"size":714,"mtime":1627177502969,"results":"65","hashOfConfig":"44"},{"size":959,"mtime":1627170756762,"results":"66","hashOfConfig":"44"},{"size":1601,"mtime":1627241153938,"results":"67","hashOfConfig":"44"},{"size":1216,"mtime":1627170756762,"results":"68","hashOfConfig":"44"},{"size":669,"mtime":1627170756762,"results":"69","hashOfConfig":"44"},{"size":854,"mtime":1627170756762,"results":"70","hashOfConfig":"44"},{"size":962,"mtime":1627227422167,"results":"71","hashOfConfig":"44"},{"size":302,"mtime":1627170756762,"results":"72","hashOfConfig":"44"},{"size":174,"mtime":1627170756762,"results":"73","hashOfConfig":"44"},{"size":11344,"mtime":1627240148134,"results":"74","hashOfConfig":"44"},{"size":12483,"mtime":1627239273965,"results":"75","hashOfConfig":"44"},{"size":1556,"mtime":1627178489253,"results":"76","hashOfConfig":"44"},{"size":3672,"mtime":1627239163259,"results":"77","hashOfConfig":"44"},{"size":3125,"mtime":1627227741768,"results":"78","hashOfConfig":"44"},{"size":4432,"mtime":1627227645652,"results":"79","hashOfConfig":"44"},{"size":1777,"mtime":1627178489253,"results":"80","hashOfConfig":"44"},{"size":740,"mtime":1627170756762,"results":"81","hashOfConfig":"44"},{"size":1137,"mtime":1627180566194,"results":"82","hashOfConfig":"44"},{"size":6619,"mtime":1627241520148,"results":"83","hashOfConfig":"44"},{"size":329,"mtime":1627239452465,"results":"84","hashOfConfig":"44"},{"size":392,"mtime":1627170756762,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"mi4qgi",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"88"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"88"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"88"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"88"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"88"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"/home/delpinor/git/psa_tribu1/my-app/src/index.js",[],["177","178"],"/home/delpinor/git/psa_tribu1/my-app/src/App.js",[],"/home/delpinor/git/psa_tribu1/my-app/src/reportWebVitals.js",[],"/home/delpinor/git/psa_tribu1/my-app/src/Home.js",["179"],"import React from \"react\";\nimport NavigationBar from \"./shared/navbar\";\nimport DashboardHomeCard from \"./shared/card\";\nimport \"./home.css\";\n\nexport default function Home() {\n  return (\n    <div>\n      <h1 className=\"bienvenida\">Bienvenidos a PSA</h1>\n      <div id=\"card_container\" class=\"row justify-content-around\">\n        <DashboardHomeCard\n          titulo=\"Proyectos\"\n          descripcion=\"Módulo para creación y visualización de proyectos y tareas.\"\n          src_imagen=\"./proyecto.jpg\"\n          href=\"./proyectos\"\n        />\n        <DashboardHomeCard\n          titulo=\"Recursos\"\n          descripcion=\"Módulo para visualización de Recursos y Carga de Horas.\"\n          src_imagen=\"./recursos.jpg\"\n          href=\"./recursos\"\n        />\n        <DashboardHomeCard\n          titulo=\"Soporte\"\n          descripcion=\"Modulo para visualizar y crear Tickets.\"\n          src_imagen=\"./soporte.png\"\n          href=\"./soporte/productos\"\n        />\n      </div>\n    </div>\n  );\n}\n","/home/delpinor/git/psa_tribu1/my-app/src/recursos/Resources.js",[],"/home/delpinor/git/psa_tribu1/my-app/src/recursos/FormEditHoras.js",[],"/home/delpinor/git/psa_tribu1/my-app/src/recursos/CargaDeHoras.js",["180","181","182","183","184","185","186","187"],"import React, {useState} from 'react';\nimport NavigationBar from '../shared/navbar';\nimport {Table, Button, Modal} from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport ReactDOM from \"react-dom\";\nimport { BsFillTrashFill, BsPencil } from \"react-icons/bs\";\nimport './general.css'\nimport './CargaDeHoras.css'\nimport './FormCargaHoras'\n\nexport default function CargaDeHoras(){\n\n    let Horas = '';\n    let history = useHistory();\n    \n\n    function change_url(){\n        history.push(\"./horas/cargar\");\n    }\n\n    function reload(){\n        let currentPath = window.location.pathname;\n        history.replace(`${currentPath}/replace`);\n        setTimeout(() => {\n        history.replace(currentPath)\n        }, 0);\n    }\n\n    \n\n    async function postData(url = '', data = {}) {\n        await fetch(url, {\n            method: 'DELETE',\n            mode: 'cors',\n            cache: 'no-cache',\n            credentials: 'same-origin',\n            headers: {\n            'Content-Type': 'application/json'\n            },\n            redirect: 'follow',\n            referrerPolicy: 'no-referrer',\n        });\n    }\n\n\n    async function borrar_carga(id_carga){\n        await postData('https://psa-carga-de-horas.herokuapp.com/horas/'+id_carga, {});\n    }\n\n\n    function btFilter_onClick() {\n        fetch(\"https://psa-carga-de-horas.herokuapp.com/horas/legajo/1/fecha/\" + document.getElementById(\"fecha_desde\").value\n            + \"/\" + document.getElementById(\"fecha_hasta\").value)\n            .then(response => response.json())\n            .then(data => {\n                if (data === undefined){\n                    return;\n                }\n                Horas = data;\n                let string = '';\n                for (let i = 0; i < Horas.length; i++) {\n                    string += \"<tr>\"+\n                    \"<td>\"+Horas[i].idCarga+\"</td>\"+\n                    \"<td>\"+Horas[i].nombreTarea+\"</td>\"+\n                    \"<td>\"+Horas[i].horas+\"</td>\"+\n                    \"<td>\"+Horas[i].fecha.substr(8,2)+\"/\"+Horas[i].fecha.substr(5,2)+\"/\"+Horas[i].fecha.substr(0,4)+\"</td>\"+\n                    \"<td id='boton_edit_\"+Horas[i].idCarga+\"'></td>\"+\n                    \"<td id='boton_eliminar_\"+Horas[i].idCarga+\"'></td>\"+\n                    \"</tr>\"\n                }\n                document.getElementsByTagName(\"tbody\")[0].innerHTML = string;\n                let table = document.getElementsByTagName(\"tbody\")[0];\n                for(let i=0, row; row=table.rows[i]; i++) {\n                    let idCargaActual = row.firstChild.innerHTML;\n                    ReactDOM.render(<Button id={idCargaActual} className='btn boton_oscuro' onClick={() => {history.push('/recursos/horas/editar/'+idCargaActual)}}><BsPencil/></Button>, document.getElementById('boton_edit_'+idCargaActual));\n                    ReactDOM.render(<Button className=\"btn btn-warning\" onClick={() => {borrar_carga(idCargaActual)}} id={idCargaActual}> <BsFillTrashFill/> </Button>, document.getElementById('boton_eliminar_'+idCargaActual));\n                }\n            });\n    }\n    \n    class TablaHoras extends React.Component{\n\n        constructor(props) {\n            super(props);\n            this.state = {id: 0, show: false, elim: false};\n        }\n\n        handleShow(idCargaActual) {\n             this.state.show = true;\n             this.state.id = idCargaActual;\n             console.log(this.state.show);\n             console.log(this.state.id);\n             this.forceUpdate();\n        }\n\n        handleClose() {\n            this.state.show = false;\n            this.forceUpdate();\n        }\n\n        handleElim(){\n            this.state.show = false;\n            this.state.elim = true;\n            this.forceUpdate();\n        }\n\n        handleElimClose(){\n            reload();\n        }\n\n        componentDidMount() {\n            fetch(\"https://psa-carga-de-horas.herokuapp.com/horas/legajo/1\")\n                .then(response => response.json())\n                .then(data => {\n                    Horas = data;\n                    let string = '';\n                    for (let i = 0; i < Horas.length; i++) {\n                        string += \"<tr>\"+\n                        \"<td>\"+Horas[i].idCarga+\"</td>\"+\n                        \"<td>\"+Horas[i].nombreTarea+\"</td>\"+\n                        \"<td>\"+Horas[i].horas+\"</td>\"+\n                        \"<td>\"+Horas[i].fecha.substr(8,2)+\"/\"+Horas[i].fecha.substr(5,2)+\"/\"+Horas[i].fecha.substr(0,4)+\"</td>\"+\n                        \"<td id='boton_edit_\"+Horas[i].idCarga+\"'></td>\"+\n                        \"<td id='boton_eliminar_\"+Horas[i].idCarga+\"'></td>\"+\n                        \"</tr>\"\n                    }\n                    document.getElementsByTagName(\"tbody\")[0].innerHTML = string;\n                    let table = document.getElementsByTagName(\"tbody\")[0];\n                    for(let i=0, row; row=table.rows[i]; i++) {\n                        let idCargaActual = row.firstChild.innerHTML;\n                        //document.getElementById('boton_edit_'+idCargaActual).innerHTML = \"<Button class='btn boton_oscuro' href = '/recursos/horas/editar/\"+idCargaActual+\"'><BsPencil/></Button>\";\n                        ReactDOM.render(<Button id={idCargaActual} className='btn boton_oscuro' onClick={() => {history.push('/recursos/horas/editar/'+idCargaActual)}}><BsPencil/></Button>, document.getElementById('boton_edit_'+idCargaActual));\n                        ReactDOM.render(<Button className=\"btn btn-warning\" onClick={() => {this.handleShow(idCargaActual)}} id={idCargaActual}> <BsFillTrashFill/> </Button>, document.getElementById('boton_eliminar_'+idCargaActual));\n                        //ReactDOM.render(<div onClick={this.handleShow}><BotonEliminar id={idCargaActual}/></div>, document.getElementById('boton_eliminar_'+idCargaActual));\n                    }\n                });\n        }\n\n        render(){\n            return(\n                <div>\n                    <Table responsive striped bordered variant=\"dark\" className=\"table-dark\">\n                        <thead className=\"table-dark\">\n                        <tr>\n                            <th>ID</th>\n                            <th>Tarea</th>\n                            <th>Horas</th>\n                            <th>Fecha</th>\n                            <th>Editar</th>\n                            <th>Borrar</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        </tbody>\n                    </Table>\n                    <Modal show={this.state.show}>\n                        <Modal.Header closeButton>\n                            <Modal.Title>Verficar</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <p>¿Está seguro que quiere borrar la carga {this.state.id}?</p>\n                        </Modal.Body>\n                        <Modal.Footer>\n                            <Button className='btn btn-warning' onClick={() => {borrar_carga(this.state.id); this.handleElim()}}>Eliminar</Button>\n                            <Button className='btn btn-primary' onClick={() => this.handleClose()}>Cerrar</Button>\n                        </Modal.Footer>\n                    </Modal>\n                    <Modal show={this.state.elim}>\n                        <Modal>\n                            <Modal.Title>Eliminado</Modal.Title>\n                        </Modal>\n                        <Modal.Body>\n                            <p>Se ha eliminado la carga {this.state.id} correctamente</p>\n                        </Modal.Body>\n                        <Modal.Footer>\n                            <Button className='btn btn-primary' onClick={() => this.handleElimClose()}>Cerrar</Button>\n                        </Modal.Footer>\n                    </Modal>\n                </div>\n            );\n        }\n    }\n\n    return (\n        <div>\n            <NavigationBar/>\n            <br/>\n            <br/>\n            <br/>\n            <ul style={{  padding: '10px 5%',  listStyle: 'none',  backgroundColor:'#E0E0E0', color: 'black', flexDirection:'row', display:'flex'}}>\n                <li style={{marginRight:'5px'}}><a href=\"/home\"> Home</a> / </li>\n                <li style={{marginRight:'5px'}}><a href=\"/recursos\"> Recursos</a> / </li>\n                <li style={{marginRight:'5px'}}>Horas</li>\n            </ul>\n\n            <h2 id=\"titulo_modulo\" className=\"pt-4\">Horas cargadas</h2>\n            <div id=\"container_filtros\" className='row mt-4'>\n                <h3 className=\"col-12 mb-4\">Filtrá tu búsqueda</h3>\n                <div className='col-12 col-lg-4' id='filtro_texto'>\n                    <label >Fecha desde : </label>\n                    <input type={\"date\"} id={\"fecha_desde\"}/>\n                </div>\n                <div className='col-12 col-lg-4' id='filtro_texto'>\n                    <label >Fecha hasta : </label>\n                    <input type={\"date\"} id={\"fecha_hasta\"}/>\n                </div>\n                <div className='col-12 col-lg-4'>\n                    <Button id=\"btFilter\" className=\"btn boton_oscuro mt-4\" size={\"lg\"} onClick={btFilter_onClick}>Filtrar</Button>\n                    <div className=\"divider\"/>\n                    <Button id=\"btQuitFilter\" className=\"btn boton_oscuro mt-4\" size={\"lg\"} onClick={reload}>Quitar Filtro</Button>\n                </div>\n                <div className='col-12 col-lg-4'>\n                </div>\n            </div>\n            <div className=\"container_carga d-flex justify-content-center mt-4\">\n                <Button id='boton_de_carga' className='boton_oscuro' size={\"lg\"} onClick={change_url}>Cargar Horas</Button>\n            </div>\n            <div id=\"table_container\" className=\"col-12 mt-4\">\n                <TablaHoras/>\n            </div>\n        </div>\n    );\n}","/home/delpinor/git/psa_tribu1/my-app/src/recursos/FormCargaHoras.js",[],"/home/delpinor/git/psa_tribu1/my-app/src/soporte/SupportTicketGrid.js",["188"],"import React, {useState, useEffect} from 'react'\nimport NavigationBar from '../shared/navbar'\nimport TicketGrid from './components/TicketGrid'\nimport { Form, InputGroup, Button, Alert } from 'react-bootstrap'\nimport {\n    useParams,\n    Link\n} from \"react-router-dom\";\n\nimport {products} from './ProductList'\n\nexport default function SupportTicketGrid() {\n    const {idProducto} = useParams();\n    const [ticketList, setTicketList] = useState([])\n    const [ticketFiltered, setTicketFiltered] = useState([])\n    const [isFiltered, setIsFiltered] = useState(false);\n    const [inputSearch, setInputSearch] = useState(\"\")\n    const selectedProduct = products.filter((product) => product.id.toString() === idProducto)[0]\n\n    const searchProducts = (searchText) => {\n        if(!searchText || searchText === \"\"){\n            setTicketFiltered([])\n            setIsFiltered(false)\n            return;\n        } \n        const filteredTickets = ticketList.filter((item) => (item.name.includes(searchText)))\n        setTicketFiltered(filteredTickets);\n        setIsFiltered(true)\n    }\n\n    const getTicketsForProduct = () => {\n        const url = `https://psa2021-soporte.herokuapp.com/ticket/product/${idProducto}`\n\n        const requestOptions = {\n            method: 'GET',\n        }\n\n        fetch(url, requestOptions)\n            .then(response => {\n                if (!response.ok) {\n                   return;\n                }\n                console.log(\"OK\");\n                return response.json();\n            })\n            .then(json => {\n                if(json){\n                    console.log(\"Json: \", json);\n                    setTicketList(json)\n                }\n            })\n    }\n\n    useEffect(() => {\n        getTicketsForProduct();\n    },[]);\n\n    return (\n        <div style= {{backgroundColor:'#eee', height:'100vh'}}>\n            <NavigationBar/>\n            <div style={{marginTop:'1%'}}>\n                <ul style={{  padding: '10px 5%',  listStyle: 'none',  backgroundColor:'#E0E0E0', color: 'black', flexDirection:'row', display:'flex'}}>\n                    <li style={{marginRight:'5px'}}><a href=\"/home\"> Home</a> / </li>\n                    <li style={{marginRight:'5px'}}><a href=\"/soporte/productos\"> Soporte</a> / </li>\n                    <li style={{marginRight:'5px'}}><a href=\"/soporte/productos\"> Productos</a> /</li>\n                    <li style={{marginRight:'5px'}}>Tickets de {selectedProduct.name}</li>\n                </ul>\n                <div style={{flexDirection:'row', display:'flex', justifyContent:'space-between'}}>\n                    <h3 style={{marginLeft:'10%'}}>Tickets de {selectedProduct.name}</h3>\n                    <Link to={\"/soporte/tickets/create/\"+idProducto} style={{backgroundColor:'#001F3D', borderRadius:'6%', color:'white', marginRight:'10%', padding:'0 2% 0 2%' }}>\n                        <Button  variant=\"primary\"  style={{backgroundColor:'#001F3D',  borderColor:'#001F3D',color:'white',padding:'0 2% 0 2%' }}>\n                            Crear Ticket\n                        </Button>\n                    </Link>\n                </div>\n                <Form style={{width:'30%', alignContent:'center',marginTop: '1.5%', display:'flex', marginLeft:'33%', marginBottom:'0.5%'}}>\n                    <InputGroup className=\"mb-3\">\n                        <Form.Control onChange={(e) => setInputSearch(e.target.value)} type=\"search\" placeholder=\"Buscar ticket..\"/>\n                        <InputGroup.Append>\n                            <Button  variant=\"primary\" style={{backgroundColor:'#001F3D',borderColor:'#001F3D',color:'white' }} onClick={() => searchProducts(inputSearch)}>Buscar</Button>\n                        </InputGroup.Append>\n                    </InputGroup>\n                </Form>\n                {\n                    ticketList.length === 0 || (ticketFiltered.length === 0 && isFiltered) ?\n                    <Alert variant={\"danger\"} style={{margin:'3% 15% 0 15%', padding:'1%'}}>No hay resultados disponibles.</Alert>:\n                    <TicketGrid ticketData={isFiltered ? ticketFiltered : ticketList}/> \n                }\n\n            </div>\n        </div>\n    )\n}\n","/home/delpinor/git/psa_tribu1/my-app/src/soporte/Support.js",[],"/home/delpinor/git/psa_tribu1/my-app/src/soporte/TicketDetails.js",["189"],"import React, {useEffect, useState} from 'react'\nimport { Card, Button, Dropdown } from 'react-bootstrap'\nimport { useHistory, useParams } from \"react-router-dom\";\nimport AddTaskModal from './components/AddTaskModal';\nimport AlertModal from './components/AlertModal'\n\n\n//tasklist -> lista tareas\nconst DashboardListCard = ({taskList, projectName}) => (\n    <Card style={{marginLeft:'2%', borderStyle:'solid', margin:'0 2% 2% 2%'}}>\n        <ul style={{  padding: '2% 2% 2% 5%'}}>\n            <li style={{marginRight:'5px'}}> Visualizador de estadísticas </li>\n            <ul>\n                <li style={{marginRight:'5px'}}> Mostrar gráficos </li>\n                <li style={{marginRight:'5px'}}> Crear estadísticas </li>\n            </ul>\n        </ul>\n    </Card>\n)\n\nexport default function TicketDetails() {\n    const statusValues = [\"EN_PROGRESO\",\"NUEVO\", \"BLOQUEADO\", \"RESUELTO\"];\n    const severityValues = [\"S1\",\"S2\",\"S3\",\"S4\"];\n    const priorityValues = [\"CRITICA\",\"ALTA\",\"MEDIA\",\"BAJA\"];\n\n    const {idTicket} = useParams();\n    const [showModal, setShowModal] = useState(false);\n    const [showModalAlert, setShowModalAlert] = useState(false);\n    const [showModalSuccess, setShowModalSuccess] = useState(false);\n    const [currentTicket, setCurrentTicket] = useState(null);\n\n    \n    const [varsRequired, setVarsRequired] = useState([])\n    const [responsableSelected, setResponsableSelected] = useState(\"\")\n    const [clientSelected, setClientSelected] = useState(\"\")\n    const [clients, setClients] = useState([])\n    const [humanResources, setHumanResources] = useState([])\n    const [loadingRRHH, setLoadingRRHH] = useState(true)\n    const [loadingClients, setLoadingClients] = useState(true)\n\n    const handleCloseModal = () => setShowModal(false);\n    const handleOpenModal = () => setShowModal(true);\n    const handleCloseModalAlert = () => setShowModalAlert(false);\n    const handleOpenModalAlert = () => setShowModalAlert(true);\n    const handleCloseModalSuccess = () => setShowModalSuccess(false);\n    const handleOpenModalSuccess = () => setShowModalSuccess(true);\n    const history = useHistory();\n\n    const handleBackButtonClick = () => {\n        history.goBack();\n    }  \n\n    const getClients = async(ticket) => {\n        const url = \"https://psa2021-soporte.herokuapp.com/client\"\n    \n        const requestOptions = {\n            method: 'GET'\n        }\n    \n        fetch(url, requestOptions)\n            .then(response => {\n                if (!response.ok) {\n                   //codigo en caso de error\n                   return;\n                }\n                console.log(\"OK\");\n                return response.json();\n            }).then(json => {\n                if(json){\n                    setClients(json);\n                    const clientSelected = json.find((client) => client.id === ticket.clientId)\n                    setClientSelected(clientSelected[\"razon social\"])\n                    setLoadingClients(false)\n                }\n            })\n    }\n\n    const getHumanResources = async(ticket) => {\n        const url = `https://psa-recursos.herokuapp.com/recursos`\n    \n        const requestOptions = {\n            method: 'GET'\n        }\n    \n        fetch(url, requestOptions)\n            .then(response => {\n                if (!response.ok) {\n                   //codigo en caso de error\n                   return;\n                }\n                console.log(\"OK\");\n                return response.json();\n            }).then(json => {\n                if(json){\n                    setHumanResources(json);\n                    if(ticket.responsableId !== -1){\n                        const humanSelected = json.find((human) => human.legajo === ticket.responsableId)\n                        setResponsableSelected(`${humanSelected.nombre} ${humanSelected.apellido}`)\n                    }\n                    setLoadingRRHH(false)\n                }\n            })\n    }\n\n\n    const handleDeleteTicket = () => {\n        const url = `http://psa2021-soporte.herokuapp.com/ticket/${currentTicket.id}`\n        const requestOptions = {\n            method: 'DELETE'\n        }\n    \n        fetch(url, requestOptions)\n            .then(response => {\n                if (!response.ok) {\n                   //codigo en caso de error\n                   console.log(\"Error\");\n                   return;\n                }\n                history.goBack();\n            })\n    }\n\n    const setClientAndResponsable = (ticket) => {\n        getHumanResources(ticket)\n        getClients(ticket)\n    }\n    \n    const handleGetTicket = () => {\n        const url = `http://psa2021-soporte.herokuapp.com/ticket/${idTicket}`\n    \n        const requestOptions = {\n            method: 'GET'\n        }\n    \n        fetch(url, requestOptions)\n            .then(response => {\n                if (!response.ok) {\n                   //codigo en caso de error\n                   return;\n                }\n                console.log(\"OK\");\n                return response.json();\n            }).then(json => {\n                if(json){\n                    setClientAndResponsable(json);\n                    json.expirationDate = json.expirationDate.split('T')[0]\n                    json.creationDate = json.creationDate.split('T')[0]\n                    if(json.resolvedDate)\n                        json.resolvedDate = json.resolvedDate.split('T')[0]\n\n                    setCurrentTicket(json);\n                    console.log(\"currr ticket: \",json);\n                }\n            })\n    }\n\n    const handleInputChange = (e) => {\n        setCurrentTicket({\n            ...currentTicket, \n            [e.target.name]: e.target.value\n        })\n    }\n\n    const handleDropdownTicket = (type,value) => {\n        console.log(\"value: \",value, \"Type: \", type);\n        if(type === \"clientId\"){\n            setClientSelected(value[\"razon social\"])\n            value = value.id\n        }\n        if(type === \"responsableId\"){\n            setResponsableSelected(`${value.nombre} ${value.apellido}`)\n            value = value.legajo\n        }\n\n        setCurrentTicket({\n            ...currentTicket, \n            [type]: value\n        })\n    }\n\n    const validateTicket = () => {\n        // Prioridad severidad cliente descripcion creador\n        let var_required = [];\n        if(currentTicket.priority === \"\"){\n            var_required.push(\"Prioridad\")\n        }\n        if(currentTicket.severity === \"\"){\n            var_required.push(\"Severidad\")\n        }\n        if(currentTicket.clientId === -1){\n            var_required.push(\"Cliente\")\n        }\n        if(currentTicket.description === \"\"){\n            var_required.push(\"Descripción\")\n        }\n        if(var_required.length !== 0){\n            setVarsRequired(var_required)\n            handleOpenModalAlert()\n            return true;\n        }\n        return false;\n    }\n\n    const handleUpdateTicket = (e) => {\n        e.preventDefault()\n        const ticketIsCorrect = validateTicket()\n        if(ticketIsCorrect){\n            return\n        }\n        console.log(\"Ola quiero updatear este ticket: \", currentTicket);\n        const url = \"https://psa2021-soporte.herokuapp.com/ticket/update\"\n \n\n\n        const jsonBody = JSON.stringify({\n            id: currentTicket.id,\n            productId: currentTicket.productId,\n            name: currentTicket.name === \"\" ? \"Nuevo Ticket\" : currentTicket.name,\n            description: currentTicket.description,\n            severity: currentTicket.severity,\n            creator: currentTicket.creatorName,\n            clientId: currentTicket.clientId,\n            state: currentTicket.state,\n            priority: currentTicket.priority,\n            responsableId: currentTicket.responsableId\n        })    \n        const requestOptions = {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: jsonBody\n        }\n    \n        fetch(url, requestOptions)\n            .then(response => {\n                if (!response.ok) {\n                   //codigo en caso de error\n                   return;\n                }\n                console.log(\"OK\");\n                handleOpenModalSuccess();\n                if(currentTicket.name === \"\"){\n                    setCurrentTicket({\n                        ...currentTicket,\n                        name: \"Nuevo Ticket\"\n                    })\n                }\n            })\n    }\n\n    useEffect(() => {\n        handleGetTicket()\n    }, [])\n\n    const DashboardDataCard = ({title,data, extraStyle}) => (\n        <Card style={{...extraStyle, marginBottom:'8%', padding: '4% 0 0 5%', backgroundColor:'#E0E0E0'}}>\n            <h5>{title}</h5>\n            <p>{data != null ? data : \" - \"}</p>\n        </Card>\n    )\n    \n    const DashboardDropdownCard = ({required, title,data, itemName, dropdownItems}) => (\n        <Card style={{ marginBottom:'8%', padding: '4% 0 0 5%',backgroundColor:'#E0E0E0'}}>\n            <h5 className=\"d-flex flex-direction-row\">{title} {required && <p style={{color:'red'}}>*</p>}</h5>\n            <Dropdown >\n                <Dropdown.Toggle disabled={(title === \"Responsable\" && loadingRRHH) || (title === \"Cliente\" && loadingClients)} style={{marginBottom:'5%',backgroundColor:'#045174'}} variant=\"secondary\" id=\"dropdown-basic\">\n                    {data === \"\" || data === -1 ? \"Seleccionar\" : data}\n                </Dropdown.Toggle>\n    \n                <Dropdown.Menu>\n                    {\n                        dropdownItems.map((item) => (\n                            <Dropdown.Item name={itemName} onClick={(e) => handleDropdownTicket(e.target.name,item)} >\n                                { title=== \"Responsable\" ? `${item.nombre} ${item.apellido}` : (title===\"Cliente\" ? item[\"razon social\"] : item)}\n                            </Dropdown.Item>\n                        ))\n                    }\n                </Dropdown.Menu>\n            </Dropdown>\n        </Card>\n    )\n\n    return (\n        <div className=\"container-fluid align-self-center\" style={{margin:0, padding:0}}>\n                <div className=\"d-flex flex-column justify-content-center\" style={{padding:'2%',backgroundColor:'#eee'}}>\n                    <div className=\"d-flex justify-content-center\"style={{marginTop:'2%', marginBottom:'2%'}}>\n                        <div className=\"d-flex\" style={{width:'60%'}}>\n                            <Button variant=\"primary\" style={{backgroundColor:'#ca6212',border:'none',color:'white'}} onClick={handleBackButtonClick}>Volver</Button>\n                            <h3 style={{marginLeft:'5%'}}>Detalles del Ticket</h3>\n                        </div>\n                        <Button variant=\"primary\" style={{backgroundColor:'#ca6212',border:'none',color:'white' }} onClick={handleDeleteTicket} >Eliminar ticket</Button>\n                    </div>\n                   \n                <form onSubmit={handleUpdateTicket}>\n                    <Card style={{display:'flex', flexDirection:'row', borderStyle:'none', justifyContent:'space-between', margin: '0 15% 0 15%',backgroundColor:'#eee'}}>\n                        <Card style={{borderWidth:2, marginRight:'2%', borderStyle:'solid', padding:'2%', flex:1,backgroundColor:'#045174'}}>\n                            <Card style={{ marginBottom:'8%', padding: '4% 0 0 5%',backgroundColor:'#E0E0E0'}}>\n                                <h5>Nombre Ticket</h5>\n                                <input className=\"form-control\" type=\"text\" name=\"name\" value={currentTicket && currentTicket.name} onChange={handleInputChange} style={{marginBottom:'5%', width:'85%'}}/>\n                            </Card>\n                            <DashboardDataCard title=\"Producto\" data=\"App música\"/>\n                            <DashboardDataCard title=\"Versión\" data=\"1.0.21\"/>\n                            <DashboardDropdownCard required itemName=\"severity\" title=\"Severidad\" data={ currentTicket && currentTicket.severity} dropdownItems={severityValues}/>\n                            <DashboardDropdownCard required itemName=\"priority\" title=\"Prioridad\" data={ currentTicket && currentTicket.priority} dropdownItems={priorityValues}/>\n                            <DashboardDataCard title=\"Fecha de Vencimiento\" data={ currentTicket && currentTicket.expirationDate}/>\n                            <DashboardDataCard title=\"Fecha de Creacion\" data={ currentTicket && currentTicket.creationDate}/>\n                            <DashboardDataCard title=\"Fecha de Resolucion\" data={ currentTicket && currentTicket.resolvedDate}/>\n                        </Card>\n                        <Card style={{borderWidth:2, marginLeft:'2%', borderStyle:'solid', padding:'2%', flex:1,backgroundColor:'#045174'}}> \n                            <DashboardDropdownCard itemName=\"state\" title=\"Estado\" data={ currentTicket && currentTicket.state} dropdownItems={statusValues}/>\n                            <DashboardDropdownCard required itemName=\"clientId\" title=\"Cliente\" data={clientSelected} dropdownItems={clients}/>\n                            <DashboardDropdownCard itemName=\"responsableId\" title=\"Responsable\"  data={responsableSelected} dropdownItems={humanResources}/>\n                            <Card style={{ marginBottom:'8%', padding: '4% 0 0 5%',backgroundColor:'#E0E0E0'}}>\n                                <h5 className=\"d-flex flex-direction-row\">Creador</h5>\n                                <input className=\"form-control\" type=\"text\" name=\"creatorName\" value={currentTicket && currentTicket.creatorName} onChange={handleInputChange} style={{marginBottom:'5%', width:'85%'}}/>\n                            </Card>\n                            <Card style={{height:'50%', marginBottom:'8%', padding: '4% 0 0 5%',backgroundColor:'#E0E0E0'}}>\n                                <h5 className=\"d-flex flex-direction-row\">Descripción <p style={{color:'red'}}>*</p></h5>\n                                <textarea name=\"description\" value={currentTicket && currentTicket.description} onChange={handleInputChange} className=\"form-control\" rows=\"5\" style={{marginTop:'2%',width:'85%', height:'80%'}}/>\n                            </Card>\n                        </Card>\n                    </Card>\n                    <div className=\"d-flex flex-column\">\n                    <Card style={{margin: '3% 15% 0 15%',backgroundColor:'#045174',color:'#000000'}}>\n                        <div style={{flexDirection:'row', display:'flex', margin:'2% 0 2% 2%'}}>\n                            <h4 style={{marginRight:'5%', color:'#eeeeee'}}>Tareas Asociadas</h4>\n                            <Button variant=\"primary\" style={{backgroundColor:'#ca6212',border:'none',color:'white' }} onClick={handleOpenModal} >Asociar tarea</Button>\n                        </div>\n                        <DashboardListCard/>\n                        <DashboardListCard/>\n                    </Card>\n                   \n                    <Button type=\"submit\" className='btn' variant=\"primary\" style={{backgroundColor:'#ca6212', border:'none',color:'white',padding:'1%', width:'10%', marginTop:'2%', alignSelf:'center' }}>Actualizar ticket</Button>\n                 </div></form>\n            </div>\n            <AddTaskModal handleCloseModal={handleCloseModal} showModal={showModal} idTicket={idTicket}/>\n            <AlertModal \n                handleCloseModal={handleCloseModalAlert} \n                showModal={showModalAlert} \n                varsRequired={varsRequired}\n                title=\"Advertencia\"\n                isAlert={true}\n                text=\"Los siguientes campos deben ser llenados de forma obligatoria:\"\n            />\n            <AlertModal \n                handleCloseModal={handleCloseModalSuccess} \n                showModal={showModalSuccess} \n                title=\"Actualización de ticket exitosa\"\n                isAlert={false}\n                text=\"Se realizó la actualización del ticket exitosamente.\"\n            />\n        </div>\n    )\n}\n","/home/delpinor/git/psa_tribu1/my-app/src/soporte/TicketCreation.js",[],"/home/delpinor/git/psa_tribu1/my-app/src/proyectos/services/routers.js",[],"/home/delpinor/git/psa_tribu1/my-app/src/shared/card.js",[],"/home/delpinor/git/psa_tribu1/my-app/src/shared/navbar.js",["190"],"import React from \"react\";\n\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\nimport \"./navbar.css\";\n\nexport default function NavigationBar() {\n  return (\n    <div className=\"fixed-top\">\n      <Navbar bg=\"color_custom_nav\" variant=\"dark\" expand=\"lg\">\n        <Navbar.Brand className=\"mx-3\" href=\"/home\">\n          PSA\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"/soporte/productos\" className=\"mx-3\">\n              Soporte\n            </Nav.Link>\n            <NavDropdown\n              className=\"mx-3\"\n              title=\"Proyectos\"\n              id=\"basic-nav-dropdown\"\n            >\n              <NavDropdown.Item href=\"/proyectos/proyecto/nuevo\">\n                Crear Proyecto\n              </NavDropdown.Item>\n              <NavDropdown.Item href=\"/tareas/crear/inicio\">\n                Crear Tarea\n              </NavDropdown.Item>\n              <NavDropdown.Item href=\"/proyectos\">\n                Ver Proyectos\n              </NavDropdown.Item>\n              <NavDropdown.Item href=\"/tareas/\">Ver Tareas</NavDropdown.Item>\n            </NavDropdown>\n            <NavDropdown\n              className=\"mx-3\"\n              title=\"Recursos\"\n              id=\"basic-nav-dropdown\"\n            >\n              <NavDropdown.Item href=\"/recursos\">\n                Visualizar Recursos\n              </NavDropdown.Item>\n              <NavDropdown.Item href=\"/recursos/horas\">\n                Carga de horas\n              </NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n          <Nav>\n            <Navbar.Text id=\"user-logged\" className=\"justify-content-end\">\n              {/*<img src=\"/logo192.png\" width=\"30\"></img>*/}\n              <p>Fernando Soluzzia  <span className=\"logged-in\">●</span>    <img src=\"/logo192.png\" width=\"30\"></img></p>\n            </Navbar.Text>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    </div>\n  );\n}\n","/home/delpinor/git/psa_tribu1/my-app/src/soporte/ProductList.js",[],"/home/delpinor/git/psa_tribu1/my-app/src/soporte/components/ProductCard.js",[],"/home/delpinor/git/psa_tribu1/my-app/src/soporte/components/AlertModal.js",[],"/home/delpinor/git/psa_tribu1/my-app/src/soporte/components/TicketGrid.js",[],"/home/delpinor/git/psa_tribu1/my-app/src/soporte/components/AddTaskModal.js",[],"/home/delpinor/git/psa_tribu1/my-app/src/proyectos/components/ProjectEditContainer.js",[],"/home/delpinor/git/psa_tribu1/my-app/src/proyectos/components/ProjectCreateContainer.js",[],"/home/delpinor/git/psa_tribu1/my-app/src/proyectos/components/TaskCreateContainer.js",[],"/home/delpinor/git/psa_tribu1/my-app/src/proyectos/components/TaskSummaryContainer.js",[],"/home/delpinor/git/psa_tribu1/my-app/src/proyectos/components/TaskEditContainer.js",[],"/home/delpinor/git/psa_tribu1/my-app/src/proyectos/components/ProjectsContainer.js",[],"/home/delpinor/git/psa_tribu1/my-app/src/proyectos/components/ProjectDetailsContainer.js",[],"/home/delpinor/git/psa_tribu1/my-app/src/proyectos/services/helpers.js",[],"/home/delpinor/git/psa_tribu1/my-app/src/proyectos/components/SpinnerCenter.js",[],"/home/delpinor/git/psa_tribu1/my-app/src/proyectos/components/ResultMessage.js",[],"/home/delpinor/git/psa_tribu1/my-app/src/proyectos/components/TaskEdit.js",[],"/home/delpinor/git/psa_tribu1/my-app/src/proyectos/components/ProjectEdit.js",[],"/home/delpinor/git/psa_tribu1/my-app/src/proyectos/services/projects.js",[],"/home/delpinor/git/psa_tribu1/my-app/src/proyectos/components/TaskSummary.js",[],"/home/delpinor/git/psa_tribu1/my-app/src/proyectos/components/Projects.js",[],"/home/delpinor/git/psa_tribu1/my-app/src/proyectos/components/ProjectDetails.js",[],"/home/delpinor/git/psa_tribu1/my-app/src/proyectos/services/tasks.js",[],"/home/delpinor/git/psa_tribu1/my-app/src/proyectos/components/Employee.js",[],["191","192"],"/home/delpinor/git/psa_tribu1/my-app/src/proyectos/components/SearchForm.js",[],"/home/delpinor/git/psa_tribu1/my-app/src/proyectos/components/TaskList.js",[],"/home/delpinor/git/psa_tribu1/my-app/src/proyectos/components/ModalOK.js",[],"/home/delpinor/git/psa_tribu1/my-app/src/proyectos/services/employees.js",[],{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","replacedBy":"196"},{"ruleId":"197","severity":1,"message":"198","line":2,"column":8,"nodeType":"199","messageId":"200","endLine":2,"endColumn":21},{"ruleId":"197","severity":1,"message":"201","line":1,"column":16,"nodeType":"199","messageId":"200","endLine":1,"endColumn":24},{"ruleId":"202","severity":1,"message":"203","line":73,"column":35,"nodeType":"204","messageId":"205","endLine":73,"endColumn":52},{"ruleId":"206","severity":1,"message":"207","line":89,"column":14,"nodeType":"208","messageId":"209","endLine":89,"endColumn":24},{"ruleId":"206","severity":1,"message":"207","line":90,"column":14,"nodeType":"208","messageId":"209","endLine":90,"endColumn":24},{"ruleId":"206","severity":1,"message":"207","line":97,"column":13,"nodeType":"208","messageId":"209","endLine":97,"endColumn":23},{"ruleId":"206","severity":1,"message":"207","line":102,"column":13,"nodeType":"208","messageId":"209","endLine":102,"endColumn":23},{"ruleId":"206","severity":1,"message":"207","line":103,"column":13,"nodeType":"208","messageId":"209","endLine":103,"endColumn":23},{"ruleId":"202","severity":1,"message":"203","line":129,"column":39,"nodeType":"204","messageId":"205","endLine":129,"endColumn":56},{"ruleId":"210","severity":1,"message":"211","line":56,"column":7,"nodeType":"212","endLine":56,"endColumn":9,"suggestions":"213"},{"ruleId":"210","severity":1,"message":"214","line":255,"column":8,"nodeType":"212","endLine":255,"endColumn":10,"suggestions":"215"},{"ruleId":"216","severity":1,"message":"217","line":51,"column":77,"nodeType":"218","endLine":51,"endColumn":112},{"ruleId":"193","replacedBy":"219"},{"ruleId":"195","replacedBy":"220"},"no-native-reassign",["221"],"no-negated-in-lhs",["222"],"no-unused-vars","'NavigationBar' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","noDirectMutation","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getTicketsForProduct'. Either include it or remove the dependency array.","ArrayExpression",["223"],"React Hook useEffect has a missing dependency: 'handleGetTicket'. Either include it or remove the dependency array.",["224"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["221"],["222"],"no-global-assign","no-unsafe-negation",{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},"Update the dependencies array to be: [getTicketsForProduct]",{"range":"229","text":"230"},"Update the dependencies array to be: [handleGetTicket]",{"range":"231","text":"232"},[1764,1766],"[getTicketsForProduct]",[8532,8534],"[handleGetTicket]"]